<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.jonathanlebloas</groupId>
	<artifactId>computer-database</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>Training project: computer-database</name>
	<packaging>pom</packaging>

	<modules>
		<module>computer-database-core</module>
		<module>computer-database-persistence</module>
		<module>computer-database-service</module>
		<module>computer-database-cli</module>
		<module>computer-database-webapp</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<skipIntegrationTests>false</skipIntegrationTests>

		<!-- Embedded tests server ports -->
		<cargo-servlet-port>18080</cargo-servlet-port>
		<cargo-tomcat-ajp-port>18009</cargo-tomcat-ajp-port>

		<!-- Logs -->
		<slf4j-api-version>1.7.7</slf4j-api-version>
		<logback-version>1.1.3</logback-version>
		<jcl-slf4j-version>1.7.12</jcl-slf4j-version>

		<!-- DB Connector -->
		<mysql-connector-version>5.1.37</mysql-connector-version>

		<!-- DB connection pool -->
		<bonecp-version>0.8.0.RELEASE</bonecp-version>

		<!-- Spring FrameWork -->
		<spring-version>4.2.2.RELEASE</spring-version>
		<spring-data-jpa-version>1.9.1.RELEASE</spring-data-jpa-version>
		<spring-security-version>4.0.3.RELEASE</spring-security-version>

		<!-- JPA / ORM / Entity Manager -->
		<hibernate-jpa-2.1-api-version>1.0.0.Final</hibernate-jpa-2.1-api-version>
		<hibernate-entitymanager-version>5.0.4.Final</hibernate-entitymanager-version>
		<hibernate-java8-version>5.0.4.Final</hibernate-java8-version>
		<jta-version>1.1</jta-version>
		<!-- xml-apis for selenium and hibernate -->
		<xml-apis-version>1.4.01</xml-apis-version>

		<!-- Validation -->
		<javax-validation-api-version>1.1.0.Final</javax-validation-api-version>
		<hibernate-validator-version>5.2.2.Final</hibernate-validator-version>
		<javax.el-api-version>2.2.4</javax.el-api-version>
		<commons-beanutils-version>1.9.2</commons-beanutils-version>

		<!-- UI CLI -->
		<commons-cli-version>1.3</commons-cli-version>

		<!-- UI Web -->
		<servlet-api-version>3.1.0</servlet-api-version>
		<jsp-api-version>2.2</jsp-api-version>
		<jstl-version>1.2</jstl-version>

		<!-- Tests -->
		<junit-version>4.12</junit-version>
		<mockito-all-version>1.9.5</mockito-all-version>

		<!-- Tests Selenium -->
		<selenium-java-version>2.48.2</selenium-java-version>

		<!-- Other -->
		<java-source-version>1.8</java-source-version>
		<java-target-version>1.8</java-target-version>
		<maven-compiler-plugin-version>3.3</maven-compiler-plugin-version>
		<maven-shade-plugin-version>2.4.2</maven-shade-plugin-version>
		<cargo-maven2-version>1.4.16</cargo-maven2-version>
		<maven-failsafe-version>2.12</maven-failsafe-version>
		<maven-surefire-version>2.18</maven-surefire-version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Logs -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j-api-version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-version}</version>
			</dependency>
			<!-- Bridge logging from JCL to SLF4j -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>99-empty</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${jcl-slf4j-version}</version>
			</dependency>

			<!-- DB Connector -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- DB connection pool -->
			<dependency>
				<groupId>com.jolbox</groupId>
				<artifactId>bonecp</artifactId>
				<version>${bonecp-version}</version>
			</dependency>

			<!-- Spring FrameWork -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring-data-jpa-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring-security-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring-security-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring-security-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring-security-version}</version>
			</dependency>

			<!-- ORM / Entity Manager -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate-entitymanager-version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>${hibernate-jpa-2.1-api-version}</version>
			</dependency>
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${jta-version}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- Dependency needed for usage of java 8 Localtime with Hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-java8</artifactId>
				<version>${hibernate-java8-version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- Fix xml-apis versions needed by hibernate-entitymanager and selenium 
				on different versions -->
			<dependency>
				<groupId>xml-apis</groupId>
				<artifactId>xml-apis</artifactId>
				<version>${xml-apis-version}</version>
			</dependency>

			<!-- Form Validation using Annotations -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${javax-validation-api-version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator-version}</version>
			</dependency>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>${javax.el-api-version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils-version}</version>
			</dependency>

			<!-- UI CLI -->
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>${commons-cli-version}</version>
			</dependency>

			<!-- UI Web -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet-api-version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp-api-version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl-version}</version>
			</dependency>

			<!-- Tests -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit-version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito-all-version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Tests Selenium -->
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium-java-version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Logs -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Bridge logging from JCL to SLF4j -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin-version}</version>
					<configuration>
						<source>${java-source-version}</source>
						<target>${java-target-version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin-version}</version>
				</plugin>

				<!-- Excludes integration tests when unit tests are run -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-version}</version>
					<configuration>
						<excludes>
							<exclude>**/integration/*.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- Configuration of integration tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-version}</version>
					<configuration>
						<skipTests>${skipIntegrationTests}</skipTests>
						<includes>
							<include>**/integration/*.java</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<id>integration-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<encoding>${project.build.sourceEncoding}</encoding>
								<printSummary>true</printSummary>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- Configure embedded tomcat server for integration tests (ie. Selenium 
					tests) -->
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${cargo-maven2-version}</version>
					<configuration>
						<skip>${skipIntegrationTests}</skip>
						<type>embedded</type>
						<container>
							<containerId>tomcat8x</containerId>
							<output>${project.build.directory}/tomcat8x/container.log</output>
							<append>false</append>
							<log>${project.build.directory}/tomcat8x/cargo.log</log>
						</container>
						<configuration>
							<properties>
								<cargo.logging>high</cargo.logging>
								<cargo.servlet.port>${cargo-servlet-port}</cargo.servlet.port>
								<cargo.tomcat.ajp.port>${cargo-tomcat-ajp-port}</cargo.tomcat.ajp.port>
							</properties>
						</configuration>
					</configuration>
					<executions>
						<execution>
							<id>start</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>stop</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<!-- highly available repository serving empty artifacts -->
			<id>version99</id>
			<url>http://version99.qos.ch/</url>
		</repository>
	</repositories>
</project>
